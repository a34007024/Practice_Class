C51 COMPILER V9.01   A1                                                                    02/16/2012 19:12:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE A1
OBJECT MODULE PLACED IN A1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE A1.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include        <reg51.h> 
   2          #include        "BMP.h" 
   3          // === 定義 LCD 介面 ==================
   4          sbit            E=P3^0;                         // 宣告E信號的輸出入埠 
   5          sbit            RW=P3^1;                        // 宣告RW信號的輸出入埠 
   6          sbit            RS=P3^2 ;                       // 宣告RS信號的輸出入埠 
   7          sbit            BF=P0^7;                        // 宣告忙碌旗標的位址 
   8          #define LCDP P0                                 // Port 0連接LCD匯流排 
   9          // === 定義蜂鳴器介面 ============
  10          sbit    Buzzer=P3^7;                    // 宣告蜂鳴器位址 
  11          // === 宣告函數 ============
  12          void    INIT8(void);                    // 宣告LCD初始化函數
  13          void    check_BF(void);                 // 宣告檢查忙碌函數
  14          void    write_inst(char);               // 宣告寫入指令函數
  15          void    write_bmp(void);                // 宣告圖形顯示函數
  16          void    flash(bit,char,int);    // 宣告閃爍函數
  17          void    DELAY500us(int);                // 宣告延時函數
  18          void    BEEP(char);                     // 宣告嗶聲函數
  19          // =========================================================
  20          main()
  21          {       INIT8();                                        // LCD初始化
  22   1              write_bmp();                            // 顯示靚圖
  23   1              while(1)                                        // 無窮盡迴圈  
  24   1              {       flash(1,5,400);                 // 閃爍5次
  25   2                      BEEP(3);                                // 嗶三聲 
  26   2              } 
  27   1      }
  28          // =========================================================
  29          void    DELAY500us(int x) 
  30          {       int i,j;                                        // 宣告變數
  31   1              for(i=0;i<x;i++)                        // 外迴圈(x*1ms)
  32   1                      for(j=0;j<60;j++);              // 內迴圈(0.5ms)
  33   1      }
  34          // =========================================================
  35          void    BEEP(char x) 
  36          {       char i,j;                                               // 宣告變數
  37   1              for(i=0;i<x;i++)                                // 外迴圈(x聲)
  38   1              {       for(j=0;j<100;j++)                      // 吸放100次 
  39   2                      {       Buzzer=0;DELAY500us(1); // 吸0.5ms
  40   3                              Buzzer=1;DELAY500us(1); // 放0.5ms
  41   3                      }       
  42   2                      DELAY500us(200);                        // 靜音(0.1s)
  43   2              }       
  44   1      }
  45          // =========================================================
  46          // === 8位元傳輸介面之LCM初始化函數 ===
  47          void INIT8(void) 
  48          {       write_inst(0x30);                       // 設定功能(8位元傳輸介面)
  49   1              write_inst(0x30);                       // 設定功能(8位元傳輸介面)
  50   1              write_inst(0x08);                       // 關閉顯示器
  51   1              write_inst(0x01);                       // 清除顯示器
  52   1              write_inst(0x06);                       // 設定輸入模式
  53   1              write_inst(0x0c);                       // 開啟顯示器
  54   1      } 
  55          // === 檢查忙碌旗標函數 ===
C51 COMPILER V9.01   A1                                                                    02/16/2012 19:12:02 PAGE 2   

  56          void check_BF(void)
  57          {       E=0;                            // 禁能 
  58   1              do
  59   1              {       BF=1;                   // 設定BF為輸入埠  
  60   2                      RS=0;RW=1;E=1;  // 讀取BF與AC  
  61   2              }while(BF);             // 等待BF旗標為0
  62   1      }        
  63          // === 寫入指令函數 ==
  64          void write_inst(char inst)
  65          {       check_BF();                     // 檢查忙錄旗標函數 
  66   1              LCDP=inst;                      // 指令放入匯流排 
  67   1              RS=RW=0;E=1;            // 控制指令 
  68   1              check_BF();                     // 檢查忙錄旗標函數 
  69   1      } 
  70          // === 寫入字元函數===
  71          void write_char(char CHAR)
  72          {       check_BF();             // 檢查忙錄旗標函數 
  73   1              LCDP=CHAR;                      // 字元放入匯流排 
  74   1              RS=1;RW=0;E=1;          // 控制指令 
  75   1              check_BF();             // 檢查忙錄旗標函數 
  76   1      } 
  77          // === 圖形顯示函數 ===
  78          void write_bmp(void)
  79          {       int i,j;                                                // 宣告變數
  80   1              write_inst(0x36);                               // 切換為擴充指令
  81   1              for(i=0;i<Height;i++)                   // Height為圖高之列數
  82   1              {       write_inst(0x80+(31-i));        // 設定GDRAM之Y軸 
  83   2                      write_inst(0x80);                       // 設定GDRAM之X軸 
  84   2                      for(j=0;j<32;j++)                       // 圖最大32 Bytes(即256 bit)
  85   2                              if(j < Width)                   // 若在圖寬之內
  86   2                                      write_char(~BMPpic[Width*i+j]);// 寫入圖形內容
  87   2                              else write_char(0x00);// 寫入空白
  88   2              }
  89   1      } 
  90          // === 閃爍函數(TG=0文字，TG=1圖形) ===
  91          void flash(bit TG,char count,int time)
  92          {       char i;                                                 // 宣告變數
  93   1              for(i=0;i<count;i++)                    // 閃爍count次
  94   1              {       if(!TG)                                         // 文字介面 
  95   2                              write_inst(0x08);               // 關閉顯示器 
  96   2                      else                                            // 圖形介面
  97   2                              write_inst(0x34);               // 關閉顯示器 
  98   2                      DELAY500us(time);                       // 延遲time*0.5ms
  99   2                      if(!TG)                                         // 文字介面 
 100   2                              write_inst(0x0c);               // 開啟顯示器 
 101   2                      else                                            // 圖形介面
 102   2                              write_inst(0x36);               // 開啟顯示器 
 103   2                      DELAY500us(time);                       // 延遲time*0.5ms
 104   2              }
 105   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    343    ----
   CONSTANT SIZE    =    576    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
